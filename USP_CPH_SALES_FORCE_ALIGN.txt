CREATE PROCEDURE [dbo].[USP_CPH_SALES_FORCE_ALIGN]
AS

--EXEC USP_CPH_SALES_FORCE_ALIGN
--SELECT * FROM GX_RPT.DBO.T_CPH_SALES_FORCE_ALIGN


--PULL HM ACCOUNTS BY LOC_ID
IF OBJECT_ID('TEMPDB..#HM') IS NOT NULL DROP TABLE #HM;

SELECT 	INA_LOC_ID
INTO 	#HM
FROM 	INA.INA.INA.T_LOCATION_MAP
JOIN 	HEALTHMART.HEALTH_MART.EXT_DATA.V_HM_ACCOUNTS
ON 		V_HM_ACCOUNTS.CUST_ACCT_ID = T_LOCATION_MAP.CUST_ACCT_ID
GROUP BY INA_LOC_ID


--PULL HMA ACCOUNTS BY LOC_ID
IF OBJECT_ID('TEMPDB..#HMA') IS NOT NULL DROP TABLE #HMA;

SELECT 	INA_LOC_ID
INTO 	#HMA
FROM 	INA.INA.INA.T_LOCATION_MAP
JOIN    HEALTHMART.HEALTH_MART.EXT_DATA.T_AH_LOAD A 
ON 		A.CUST_ACCT_ID = T_LOCATION_MAP.CUST_ACCT_ID
WHERE   ISACCESSHEALTH = 'Y'
AND 	DROPDATE IS NULL
GROUP BY INA_LOC_ID

	
--COPA/SLS DATA & CUSTOMER MASTER
IF OBJECT_ID('TEMPDB..#COPA') IS NOT NULL DROP TABLE #COPA;

SELECT * INTO #COPA FROM OPENQUERY(SNOWFLAKE_EAST_PSAS, '

SELECT  CAL_YR_PERIOD AS "YR_MONTH",
        CUST_NUM AS "CUST_ACCT_ID",
        VCUS.XFD_KU_COMMON_GROUP_ID AS "COMMON_GROUP_ID",
        CG.DESCR AS "COMMON_GROUP_DESC",
        VCUS.XFD_KU_COMMON_ENTITY_ID AS "COMMON_ENTITY_ID",
        CET.DESCR AS "COMMON_ENTITY_DESC",
        SUM(SLS_QTY) AS "SLS_QTY",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP IS NULL OR SLS_CTGRY_PRC_PROD_GRP = ''Bx'' AND CMPNY_CD <> ''8545'' THEN SLS_QTY ELSE 0 END) AS "BX_SLS_QTY",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Gx'' AND CMPNY_CD <> ''8545'' THEN SLS_QTY ELSE 0 END) AS "GX_SLS_QTY",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Sx'' AND CMPNY_CD <> ''8545'' THEN SLS_QTY ELSE 0 END) AS "SX_SLS_QTY",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Bio'' AND CMPNY_CD <> ''8545'' THEN SLS_QTY ELSE 0 END) AS "BIO_SLS_QTY",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Bx OTC'' AND CMPNY_CD <> ''8545'' THEN SLS_QTY ELSE 0 END) AS "OTC_SLS_QTY",
        SUM(CASE WHEN CMPNY_CD = ''8545'' THEN SLS_QTY ELSE 0 END) AS "MPB_SLS_QTY",

        SUM(GROSS_SLS) AS "GROSS_SLS",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP IS NULL OR SLS_CTGRY_PRC_PROD_GRP = ''Bx'' AND CMPNY_CD <> ''8545'' THEN GROSS_SLS ELSE 0 END) AS "BX_GROSS_SLS",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Gx'' AND CMPNY_CD <> ''8545'' THEN GROSS_SLS ELSE 0 END) AS "GX_GROSS_SLS",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Sx'' AND CMPNY_CD <> ''8545'' THEN GROSS_SLS ELSE 0 END) AS "SX_GROSS_SLS",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Bio'' AND CMPNY_CD <> ''8545'' THEN GROSS_SLS ELSE 0 END) AS "BIO_GROSS_SLS",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Bx OTC'' AND CMPNY_CD <> ''8545'' THEN GROSS_SLS ELSE 0 END) AS "OTC_GROSS_SLS",
        SUM(CASE WHEN CMPNY_CD = ''8545'' THEN GROSS_SLS ELSE 0 END) AS "MPB_GROSS_SLS",
        
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = ''OneStop'' THEN GROSS_SLS ELSE 0 END) AS "OS_GROSS_SLS",
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = ''Multisource'' OR SLS_CTGRY_FPA_PRG_NAM = ''Network Net'' OR SLS_CTGRY_FPA_PRG_NAM = ''NextStop'' THEN GROSS_SLS ELSE 0 END) AS "MS_NWN_GROSS_SLS",
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = ''Vendor Contract'' THEN GROSS_SLS ELSE 0 END) AS "VENDOR_CONTRACT_GROSS_SLS",
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM IS NULL OR SLS_CTGRY_FPA_PRG_NAM = ''Bx'' OR SLS_CTGRY_FPA_PRG_NAM = ''Bio'' OR SLS_CTGRY_FPA_PRG_NAM = ''Sx'' OR SLS_CTGRY_FPA_PRG_NAM = ''Nonsource'' THEN GROSS_SLS ELSE 0 END) AS "OTHER_GROSS_SLS",
        
        SUM(NET_REVENUE) AS "NET_REVENUE",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP IS NULL OR SLS_CTGRY_PRC_PROD_GRP = ''Bx'' AND CMPNY_CD <> ''8545'' THEN NET_REVENUE ELSE 0 END) AS "BX_NET_REVENUE",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Gx'' AND CMPNY_CD <> ''8545'' THEN NET_REVENUE ELSE 0 END) AS "GX_NET_REVENUE",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Sx'' AND CMPNY_CD <> ''8545'' THEN NET_REVENUE ELSE 0 END) AS "SX_NET_REVENUE",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Bio'' AND CMPNY_CD <> ''8545'' THEN NET_REVENUE ELSE 0 END) AS "BIO_NET_REVENUE",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Bx OTC'' AND CMPNY_CD <> ''8545'' THEN NET_REVENUE ELSE 0 END) AS "OTC_NET_REVENUE",
        SUM(CASE WHEN CMPNY_CD = ''8545'' THEN NET_REVENUE ELSE 0 END) AS "MPB_NET_REVENUE",
        
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = ''OneStop'' THEN NET_REVENUE ELSE 0 END) AS "OS_NET_REVENUE",
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = ''Multisource'' OR SLS_CTGRY_FPA_PRG_NAM = ''Network Net'' OR SLS_CTGRY_FPA_PRG_NAM = ''NextStop'' THEN NET_REVENUE ELSE 0 END) AS "MS_NWN_NET_REVENUE",
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = ''Vendor Contract'' THEN NET_REVENUE ELSE 0 END) AS "VENDOR_CONTRACT_NET_REVENUE",
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM IS NULL OR SLS_CTGRY_FPA_PRG_NAM = ''Bx'' OR SLS_CTGRY_FPA_PRG_NAM = ''Bio'' OR SLS_CTGRY_FPA_PRG_NAM = ''Sx'' OR SLS_CTGRY_FPA_PRG_NAM = ''Nonsource'' THEN NET_REVENUE ELSE 0 END) AS "OTHER_NET_REVENUE",

        SUM(VAR_EBIT) AS "EBIT",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP IS NULL OR SLS_CTGRY_PRC_PROD_GRP = ''Bx'' AND CMPNY_CD <> ''8545'' THEN VAR_EBIT ELSE 0 END) AS "BX_EBIT",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Gx'' AND CMPNY_CD <> ''8545'' THEN VAR_EBIT ELSE 0 END) AS "GX_EBIT",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Sx'' AND CMPNY_CD <> ''8545'' THEN VAR_EBIT ELSE 0 END) AS "SX_EBIT",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Bio'' AND CMPNY_CD <> ''8545'' THEN VAR_EBIT ELSE 0 END) AS "BIO_EBIT",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Bx OTC'' AND CMPNY_CD <> ''8545'' THEN VAR_EBIT ELSE 0 END) AS "OTC_EBIT",
        SUM(CASE WHEN CMPNY_CD = ''8545'' THEN VAR_EBIT ELSE 0 END) AS "MPB_EBIT",

        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = ''OneStop'' THEN VAR_EBIT ELSE 0 END) AS "OS_EBIT",
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = ''Multisource'' OR SLS_CTGRY_FPA_PRG_NAM = ''Network Net'' OR SLS_CTGRY_FPA_PRG_NAM = ''NextStop'' THEN VAR_EBIT ELSE 0 END) AS "MS_NWN_EBIT",
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = ''Vendor Contract'' THEN VAR_EBIT ELSE 0 END) AS "VENDOR_CONTRACT_VAR_EBIT",
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM IS NULL OR SLS_CTGRY_FPA_PRG_NAM = ''Bx'' OR SLS_CTGRY_FPA_PRG_NAM = ''Bio'' OR SLS_CTGRY_FPA_PRG_NAM = ''Sx'' OR SLS_CTGRY_FPA_PRG_NAM = ''Nonsource'' THEN VAR_EBIT ELSE 0 END) AS "OTHER_EBIT",
        
        SUM(GROSS_PROFIT) AS "GROSS_PROFIT",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP IS NULL OR SLS_CTGRY_PRC_PROD_GRP = ''Bx'' AND CMPNY_CD <> ''8545'' THEN GROSS_PROFIT ELSE 0 END) AS "BX_GP",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Gx'' AND CMPNY_CD <> ''8545'' THEN GROSS_PROFIT ELSE 0 END) AS "GX_GP",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Sx'' AND CMPNY_CD <> ''8545'' THEN GROSS_PROFIT ELSE 0 END) AS "SX_GP",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Bio'' AND CMPNY_CD <> ''8545'' THEN GROSS_PROFIT ELSE 0 END) AS "BIO_GP",
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = ''Bx OTC'' AND CMPNY_CD <> ''8545'' THEN GROSS_PROFIT ELSE 0 END) AS "OTC_GP",
        SUM(CASE WHEN CMPNY_CD = ''8545'' THEN GROSS_PROFIT ELSE 0 END) AS "MPB_GP",

        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = ''OneStop'' THEN GROSS_PROFIT ELSE 0 END) AS "OS_GP",
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = ''Multisource'' OR SLS_CTGRY_FPA_PRG_NAM = ''Network Net'' OR SLS_CTGRY_FPA_PRG_NAM = ''NextStop'' THEN GROSS_PROFIT ELSE 0 END) AS "MS_NWN_GP",
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = ''Vendor Contract'' THEN GROSS_PROFIT ELSE 0 END) AS "VENDOR_CONTRACT_GP",
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM IS NULL OR SLS_CTGRY_FPA_PRG_NAM = ''Bx'' OR SLS_CTGRY_FPA_PRG_NAM = ''Bio'' OR SLS_CTGRY_FPA_PRG_NAM = ''Sx'' OR SLS_CTGRY_FPA_PRG_NAM = ''Nonsource'' THEN GROSS_PROFIT ELSE 0 END) AS "OTHER_GP"
        
FROM    "SBX_PSAS_DB"."SBX_EA_ALL"."V_COPA_EA" COPA

LEFT JOIN "PRD_DATA_LAKE_DB"."PSAS_HANA"."T_TA_PHMMMD_VSTX_CUST_ATTR_ALL" VCUS
ON LTRIM(COPA.CUST_NUM,''0'') = LTRIM(VCUS.EPKUNNR,''0'')

LEFT JOIN PRD_DATA_LAKE_DB.PSAS_HANA.YTBUYGRPIDT BG
ON VCUS.XFD_KU_BUYING_GROUP_ID = BG.BUY_GRP
AND BG.SPRAS = ''E''  

LEFT JOIN PRD_DATA_LAKE_DB.PSAS_HANA.YTCOMMONGRPIDT CG
ON VCUS.XFD_KU_COMMON_GROUP_ID = CG.CMN_GRPID
AND CG.SPRAS = ''E''  

LEFT JOIN PRD_DATA_LAKE_DB.PSAS_HANA.YTCOMMONENTIDT CET
ON VCUS.XFD_KU_COMMON_ENTITY_ID = CET.CMN_ENTID
AND CET.SPRAS = ''E''   

WHERE   SRC_FLG NOT IN (''MRP'',''ARC'')
AND     CMPNY_CD IN (''8000'',''8545'')
AND 	FPA_CUST_SEG_DESC = ''ISMC''
AND 	POST_DT BETWEEN DATE_TRUNC(''month'', ADD_MONTHS(CURRENT_DATE(),-6)) AND LAST_DAY(ADD_MONTHS(CURRENT_DATE(),-1))
GROUP BY CAL_YR_PERIOD,
        CUST_NUM,
        VCUS.XFD_KU_COMMON_GROUP_ID,
        CG.DESCR,
        VCUS.XFD_KU_COMMON_ENTITY_ID,
        CET.DESCR
')



--UPDATE CUST ACCT FORMAT
UPDATE #COPA
SET CUST_ACCT_ID = RIGHT('000000'+CAST(CUST_ACCT_ID AS VARCHAR(6)),6)
WHERE CUST_ACCT_ID IS NOT NULL;


DROP TABLE GX_RPT.DBO.T_SALES_FORCE_ALIGN_TEMP 

--SALES TABLE LOAD
SELECT #COPA.*, T_IW_CUST_ACCT.HOME_DC_ID, T_IW_CUST_ACCT.SLS_TERR_ID
INTO GX_RPT.DBO.T_SALES_FORCE_ALIGN_TEMP 
FROM #COPA
JOIN REFERENCE.DBO.T_IW_CUST_ACCT 
ON 	#COPA.CUST_ACCT_ID = T_IW_CUST_ACCT.CUST_ACCT_ID


--CUSTOMER PREP
IF OBJECT_ID('TEMPDB..#CUST_PREP') IS NOT NULL DROP TABLE #CUST_PREP

SELECT	 	 COPA.CUST_ACCT_ID
		 	,T_LOCATION_MAP.INA_LOC_ID AS LOC_ID
		 	,T_IW_CUST_ACCT.NATL_GRP_CD
		 	,T_IW_CUST_ACCT.NATL_SUB_GRP_CD
			,T_IW_CUST_ACCT.CUST_CHN_ID
		 	,T_IW_CUST_ACCT.HOME_DC_ID
		 	,T_IW_CUST_ACCT.CUST_BUS_TYP_CD
		 	,T_IW_CUST_ACCT.ACTIVE_CUST_IND
		 	,T_IW_CUST_ACCT.SLS_TERR_ID
INTO    	#CUST_PREP
FROM  		GX_RPT.DBO.T_SALES_FORCE_ALIGN_TEMP COPA
JOIN 		REFERENCE.DBO.T_IW_CUST_ACCT
ON 	      	COPA.CUST_ACCT_ID = T_IW_CUST_ACCT.CUST_ACCT_ID
LEFT JOIN 	INA.INA.INA.T_LOCATION_MAP
ON 	      	COPA.CUST_ACCT_ID = T_LOCATION_MAP.CUST_ACCT_ID



--CP&H LOCATIONS
IF OBJECT_ID('TEMPDB..#CPH_LOC') IS NOT NULL DROP TABLE #CPH_LOC

SELECT 	LOC_ID
INTO 	#CPH_LOC
FROM 	#CUST_PREP
WHERE 	CUST_BUS_TYP_CD IN ('01','02','05')
AND 	LOC_ID IS NOT NULL
GROUP BY LOC_ID


--FINAL PREP CUST LIST
IF OBJECT_ID('TEMPDB..#CUST_FINAL') IS NOT NULL DROP TABLE #CUST_FINAL

SELECT  CUST_ACCT_ID
INTO 	#CUST_FINAL
FROM 	#CUST_PREP
WHERE 	#CUST_PREP.LOC_ID IN (SELECT LOC_ID FROM #CPH_LOC)
OR 		#CUST_PREP.CUST_ACCT_ID IN (SELECT DISTINCT CUST_ACCT_ID FROM #CUST_PREP WHERE CUST_BUS_TYP_CD IN ('01','02','05') AND ACTIVE_CUST_IND = 'A')
GROUP BY CUST_ACCT_ID


--FINAL CUST LIST
IF OBJECT_ID('TEMPDB..#CUST_LIST') IS NOT NULL DROP TABLE #CUST_LIST

SELECT  COPA.CUST_ACCT_ID,
		SUM(SLS_QTY) SLS_QTY
INTO 	#CUST_LIST
FROM 	GX_RPT.DBO.T_SALES_FORCE_ALIGN_TEMP COPA
JOIN 	#CUST_FINAL
ON 		COPA.CUST_ACCT_ID = #CUST_FINAL.CUST_ACCT_ID
GROUP BY COPA.CUST_ACCT_ID
HAVING  SUM(SLS_QTY) > 0 AND SUM(SLS_QTY) IS NOT NULL


---------------------------------------------------------------------------------------------------------------
--PULL IN PSC/VPS ASSIGNMENTS TABLES
IF OBJECT_ID('TEMPDB..#PSC_HIER') IS NOT NULL DROP TABLE #PSC_HIER;
SELECT * INTO #PSC_HIER FROM OPENQUERY(SNOWFLAKE,'SELECT * FROM SBX_PSAS_DB.ANALYTICS.T_CPH_ACCT_LEVEL_HIERARCHY_CURR')


IF OBJECT_ID('TEMPDB..#PREP') IS NOT NULL DROP TABLE #PREP

SELECT 	COPA.*,
		LOC.INA_LOC_ID,
		CASE WHEN #PSC_HIER.REP_NAME IS NULL THEN 'UNASSIGNED' ELSE #PSC_HIER.REP_NAME END REP_NAME,
		CASE WHEN #PSC_HIER.REP_TITLE IS NULL THEN 'UNASSIGNED' ELSE #PSC_HIER.REP_TITLE END REP_TITLE,
		CASE WHEN #PSC_HIER.DSM_NAME IS NULL THEN 'UNASSIGNED' ELSE #PSC_HIER.DSM_NAME END DSM_NAME,
		CASE WHEN #PSC_HIER.VPS_NAME IS NULL THEN 'UNASSIGNED' ELSE #PSC_HIER.VPS_NAME END VPS_NAME,
		CASE WHEN COPA.HOME_DC_ID IN ('8126','8183','8144','8149','8132','8145','8164') THEN 'Thomas, Brian'
		WHEN COPA.HOME_DC_ID IN ('8113','8120','8148','8195','8110','8160','8772','8155') THEN 'Bresnahan, Leigh'
		WHEN COPA.HOME_DC_ID IN ('8147','8182','8180','8131','8165','8170','8173','8112','8115','8128','8130','8138') THEN 'Marshall, Jeff'
        ELSE 'Other' END AVP_NAME,
        #PSC_HIER.COMP_FLG
INTO 	#PREP
FROM 	GX_RPT.DBO.T_SALES_FORCE_ALIGN_TEMP COPA
LEFT JOIN #PSC_HIER
ON 		COPA.CUST_ACCT_ID = #PSC_HIER.CUST_ACCT_ID
LEFT JOIN INA.INA.INA.T_LOCATION_MAP LOC
ON 		COPA.CUST_ACCT_ID = LOC.CUST_ACCT_ID


---------------------------------------------------------------------------------------------------------------
 

--IDENTIFY KEY ACCOUNTS
IF OBJECT_ID('TEMPDB..#KEY_ACCTS') IS NOT NULL DROP TABLE #KEY_ACCT
IF OBJECT_ID('TEMPDB..#KEY_ACCTS') IS NOT NULL DROP TABLE #KEY_ACCTS

SELECT 	INA_LOC_ID, 
		CASE WHEN T_IW_CUST_ACCT.CUST_RGN_NUM IN ('975312','975311') THEN 'HI-SCHOOL'
     	WHEN T_IW_CUST_ACCT.NATL_GRP_CD = '0703' AND CUST_CHN_ID = '161' THEN 'OSBORN'
     	WHEN (T_IW_CUST_ACCT.NATL_GRP_CD = '1000' AND T_IW_CUST_ACCT.NATL_SUB_GRP_CD = '000092') OR (T_IW_CUST_ACCT.NATL_GRP_CD = '0655' AND T_IW_CUST_ACCT.NATL_SUB_GRP_CD = '000015') THEN 'MATLOCK'
     	WHEN T_IW_CUST_ACCT.CUST_ACCT_ID IN ('833827','003577','151862','177645','256345','282191','307898','425864','425220','424576','436705','436222','447063','477795','558358','558595','731294',
     	     				  				 '781460','082236','002484','003693','721196') THEN 'SOUTHSIDE'	-- '745415', 747669', '746005'  2021-06-02 keeping under GH for now
        WHEN T_IW_CUST_ACCT.NATL_ACCT_ID IN ('790701','745415','747669','746005') then 'GOOD HEALTH'	--T_IW_CUST_ACCT.CUST_ACCT_ID IN ('745415','747669','746005') THEN 'GOOD_HEALTH'
		WHEN T_IW_CUST_ACCT.CUST_ACCT_NAM LIKE '%ARDON H%' THEN 'ARDON HEALTH'
		WHEN (T_IW_CUST_ACCT.NATL_GRP_CD = '0899' AND T_IW_CUST_ACCT.NATL_SUB_GRP_CD = '000076') THEN 'KELSEY SEYBOLD' 
        ELSE 'OTHER' 
        END  'KEY_ACCTS' 
 INTO 	#KEY_ACCT
 FROM 	#PREP
 JOIN 	REFERENCE.DBO.T_IW_CUST_ACCT
 ON 	#PREP.CUST_ACCT_ID = T_IW_CUST_ACCT.CUST_ACCT_ID
 GROUP BY INA_LOC_ID,
 		CASE WHEN T_IW_CUST_ACCT.CUST_RGN_NUM IN ('975312','975311') THEN 'HI-SCHOOL'
     	WHEN T_IW_CUST_ACCT.NATL_GRP_CD = '0703' AND CUST_CHN_ID = '161' THEN 'OSBORN'
     	WHEN (T_IW_CUST_ACCT.NATL_GRP_CD = '1000' AND T_IW_CUST_ACCT.NATL_SUB_GRP_CD = '000092') OR (T_IW_CUST_ACCT.NATL_GRP_CD = '0655' AND T_IW_CUST_ACCT.NATL_SUB_GRP_CD = '000015') THEN 'MATLOCK'
     	WHEN T_IW_CUST_ACCT.CUST_ACCT_ID IN ('833827','003577','151862','177645','256345','282191','307898','425864','425220','424576','436705','436222','447063','477795','558358','558595','731294',
     	     				  				 '781460','082236','002484','003693','721196') THEN 'SOUTHSIDE'	-- '745415', 747669', '746005'  2021-06-02 keeping under GH for now
        WHEN T_IW_CUST_ACCT.NATL_ACCT_ID IN ('790701','745415','747669','746005') then 'GOOD HEALTH'	--T_IW_CUST_ACCT.CUST_ACCT_ID IN ('745415','747669','746005') THEN 'GOOD_HEALTH'
		WHEN T_IW_CUST_ACCT.CUST_ACCT_NAM LIKE '%ARDON H%' THEN 'ARDON HEALTH'
		WHEN (T_IW_CUST_ACCT.NATL_GRP_CD = '0899' AND T_IW_CUST_ACCT.NATL_SUB_GRP_CD = '000076') THEN 'KELSEY SEYBOLD' 
        ELSE 'OTHER' 
        END


SELECT DISTINCT INA_LOC_ID,KEY_ACCTS INTO #KEY_ACCTS
FROM #KEY_ACCT WHERE KEY_ACCTS <> 'OTHER';

INSERT INTO #KEY_ACCTS
SELECT * FROM #KEY_ACCT 
WHERE INA_LOC_ID NOT IN (SELECT INA_LOC_ID FROM #KEY_ACCTS);


--PULL DART RANKING
IF OBJECT_ID('TEMPDB..#DART_INFO') IS NOT NULL DROP TABLE #DART_INFO
 
SELECT 		A.ACCOUNT,A.[ISMC],A.[HEALTHMART],A.[ATLAS],A.[DENOMINATOR],A.[FINAL_SCORE],A.[REGION], A.[RANKING]
INTO   		#DART_INFO
FROM    	[HEALTHMART].[HEALTH_MART].[EXT_DATA].[DARTSALESHEIRARCHYVIEW] A
LEFT JOIN	(SELECT ACCOUNT, NCPDP, MAX(LOAD_DT) AS LATEST_LOADDATE
 		 	FROM [HEALTHMART].[HEALTH_MART].[EXT_DATA].[DARTSALESHEIRARCHYVIEW]
 			GROUP BY	ACCOUNT,NCPDP) B
 ON  		A.LOAD_DT=B.LATEST_LOADDATE
 AND 		A.ACCOUNT=B.ACCOUNT
 AND 		A.NCPDP=B.NCPDP
 GROUP BY 	A.ACCOUNT,A.[ISMC],A.[HEALTHMART],A.[ATLAS],A.[DENOMINATOR],A.[FINAL_SCORE],A.[REGION],A.[RANKING]


DELETE #DART_INFO WHERE ACCOUNT = '774245' AND RANKING = 'C'
DELETE #DART_INFO WHERE ACCOUNT = '924608' AND HEALTHMART = 'N'
 
				

--CALCULATE AVG MONTHLY SALES ACROSS COMMMON GROUP
IF OBJECT_ID('tempdb..#COMMON_SLS') IS NOT NULL DROP TABLE #COMMON_SLS;

SELECT      #PREP.COMMON_GROUP_ID, ((SUM(GROSS_SLS)/COUNT(DISTINCT INA_LOC_ID))/6) AVG_SLS_CMN_GRP
INTO 		#COMMON_SLS
FROM 		#PREP
WHERE 		INA_LOC_ID IS NOT NULL
GROUP BY 	#PREP.COMMON_GROUP_ID


--CALCULATE AVG MONTHLY SALES ACROSS NATL_GRP & SUB_GRP COMBO
IF OBJECT_ID('tempdb..#NATL_GRP_SLS') IS NOT NULL DROP TABLE #NATL_GRP_SLS;

SELECT      NATL_GRP_CD, NATL_SUB_GRP_CD, ((SUM(GROSS_SLS)/COUNT(DISTINCT INA_LOC_ID))/6) AVG_SLS_NATL_GRP
INTO 		#NATL_GRP_SLS
FROM 		#PREP
LEFT JOIN 	REFERENCE.DBO.T_IW_CUST_ACCT
ON 			#PREP.CUST_ACCT_ID = T_IW_CUST_ACCT.CUST_ACCT_ID
WHERE 		INA_LOC_ID IS NOT NULL
GROUP BY 	NATL_GRP_CD, NATL_SUB_GRP_CD


--CALCULATE AVG MONTHLY SALES PER LOCATION
IF OBJECT_ID('tempdb..#LOC_SLS') IS NOT NULL DROP TABLE #LOC_SLS;

SELECT      INA_LOC_ID, (SUM(GROSS_SLS)/6) AVG_SLS_LOC, (SUM(GROSS_PROFIT)/6) AVG_GP_LOC, SUM(GX_GROSS_SLS)/NULLIF(SUM(GROSS_SLS),0) LOC_GCR, DATEDIFF(M,MIN(ACCT_SVC_ELIG_BEG_DT),GETDATE()) LOC_MONTHS_ACTIVE
INTO 		#LOC_SLS
FROM 		#PREP
LEFT JOIN 	REFERENCE.DBO.T_IW_CUST_ACCT
ON 			#PREP.CUST_ACCT_ID = T_IW_CUST_ACCT.CUST_ACCT_ID
GROUP BY 	INA_LOC_ID


--CONSOLIDATE AVERAGE SALES PER LOCATION, NATL GRP, COMMON GROUP
IF OBJECT_ID('tempdb..#LOC_ATR') IS NOT NULL DROP TABLE #LOC_ATR;

SELECT 		#PREP.INA_LOC_ID, #NATL_GRP_SLS.NATL_GRP_CD, #NATL_GRP_SLS.NATL_SUB_GRP_CD, AVG_SLS_NATL_GRP, RANK() OVER (PARTITION BY #PREP.INA_LOC_ID ORDER BY AVG_SLS_NATL_GRP DESC) AS RNK,
			AVG_SLS_LOC, AVG_GP_LOC, LOC_GCR, LOC_MONTHS_ACTIVE
INTO 		#LOC_ATR
FROM 		#PREP
LEFT JOIN 	#LOC_SLS
ON 			#PREP.INA_LOC_ID = #LOC_SLS.INA_LOC_ID
JOIN 		REFERENCE.DBO.T_IW_CUST_ACCT
ON 			#PREP.CUST_ACCT_ID = T_IW_CUST_ACCT.CUST_ACCT_ID
LEFT JOIN 	#NATL_GRP_SLS
ON 			T_IW_CUST_ACCT.NATL_GRP_CD = #NATL_GRP_SLS.NATL_GRP_CD
AND 		T_IW_CUST_ACCT.NATL_SUB_GRP_CD = #NATL_GRP_SLS.NATL_SUB_GRP_CD
GROUP BY 	#PREP.INA_LOC_ID, #NATL_GRP_SLS.NATL_GRP_CD, #NATL_GRP_SLS.NATL_SUB_GRP_CD, AVG_SLS_NATL_GRP, AVG_SLS_LOC, AVG_GP_LOC, LOC_GCR, LOC_MONTHS_ACTIVE

DELETE #LOC_ATR WHERE RNK > 1

--SET SELECT LOCATIONS TO AVG LOC NET SALES
UPDATE 		#LOC_ATR
SET 		AVG_SLS_NATL_GRP = AVG_SLS_LOC
FROM 		#LOC_ATR
WHERE 		((NATL_GRP_CD IS NULL AND NATL_SUB_GRP_CD IS NULL)
OR 			(NATL_GRP_CD = '' AND NATL_SUB_GRP_CD = '')
OR 			NATL_SUB_GRP_CD = '000999')

-------------
--FIND LAT/LONG
IF OBJECT_ID('tempdb..#GEO') IS NOT NULL DROP TABLE #GEO;

SELECT 	*
INTO 	#GEO 
FROM 	OPENQUERY(SNOWFLAKE, ' SELECT CUST_ACCT_ID, ORIG_ADDR, ORIG_CITY, ORIG_STATE, ORIG_ZIP, GOOGLE_LATITUDE, GOOGLE_LONGITUDE 
							   FROM PRD_PSAS_DB.RPT.T_MD_GEO_POSTAL
							   WHERE ACTIVE_CUST_IND = ''A''
							   GROUP BY CUST_ACCT_ID, ORIG_ADDR, ORIG_CITY, ORIG_STATE, ORIG_ZIP, GOOGLE_LATITUDE, GOOGLE_LONGITUDE')


							   						 
--FILL IN LAT/LONG GAPS
IF OBJECT_ID('tempdb..#GEO_ALT') IS NOT NULL DROP TABLE #GEO_ALT;	

SELECT 	* 
INTO 	#GEO_ALT
FROM 	OPENQUERY(SNOWFLAKE, ' SELECT NCPDP, LAT, LONG FROM "SBX_PSAS_DB"."AA"."T_NCPDP_LAT_LONGS" GROUP BY NCPDP, LAT, LONG' )


--PULL COUNTY BY ZIP
IF OBJECT_ID('tempdb..#COUNTY') IS NOT NULL DROP TABLE #COUNTY

SELECT * INTO #COUNTY FROM OPENQUERY(SNOWFLAKE, 'SELECT * FROM SBX_PSAS_DB.ANALYTICS."t_zips"')

		
--IQVIA MCK ISMC MARKET SHARE AS % OF TOTAL
IF OBJECT_ID('tempdb..#MKT_SHR') IS NOT NULL DROP TABLE #MKT_SHR;						   
							   
SELECT  	STATE,
			SUM([Latest_Quarter_MCK_Sales]) / SUM([Latest_Quarter_MKT_Sales]) 'MCK_ISMC_ST_MKT_SHARE'
INTO 		#MKT_SHR
FROM 		GX_RPT.DBO.ISMC_MARKET_SHARE
GROUP BY 	STATE


--IQVIA PRIMARY FLAG BY GX AND RX
IF OBJECT_ID('tempdb..#PRI_FLG') IS NOT NULL DROP TABLE #PRI_FLG

SELECT  T_IMS_SEQ_CUST_MAP_CURR.CUST_ACCT_ID, GNRC_DLR_PRIM_IND , DLR_PRIM_IND
INTO 	#PRI_FLG
FROM 	GX_RPT.DBO.T_IQVIA_GX_RX_PRIMARY 
JOIN 	DASHBOARDS.DBO.T_IMS_SEQ_CUST_MAP_CURR
ON 		RIGHT('000000000'+CAST(QI_SEQ_ID AS VARCHAR(9)),9) = T_IMS_SEQ_CUST_MAP_CURR.IMS_SEQ_ID
JOIN 	#CUST_LIST
ON 		T_IMS_SEQ_CUST_MAP_CURR.CUST_ACCT_ID = #CUST_LIST.CUST_ACCT_ID
GROUP BY T_IMS_SEQ_CUST_MAP_CURR.CUST_ACCT_ID, GNRC_DLR_PRIM_IND , DLR_PRIM_IND

--IQVIA LEAKAGE TIER
IF OBJECT_ID('tempdb..#TIER') IS NOT NULL DROP TABLE #TIER

SELECT	INA_LOC_ID, MIN(CUST_AVG_TIER) CUST_AVG_TIER
INTO    #TIER
FROM	[DASHBOARDS].[dbo].[T_IMS_LKG_CUST_GCN_COMPLIANCE_RECENT]
JOIN 	#PREP 
ON 		T_IMS_LKG_CUST_GCN_COMPLIANCE_RECENT.PRI_CUST_ID = #PREP.CUST_ACCT_ID
WHERE 	WEEK_END_DT = (SELECT MAX(WEEK_END_DT) FROM [DASHBOARDS].[dbo].[T_IMS_LKG_CUST_GCN_COMPLIANCE_RECENT])
GROUP BY INA_LOC_ID



--select * into GX_RPT.DBO.T_CP_SALES_FORCE_ALIGN_12_29_BU from GX_RPT.DBO.T_CP_SALES_FORCE_ALIGN

DROP TABLE GX_RPT.DBO.T_CP_SALES_FORCE_ALIGN;

SELECT  	#PREP.CUST_ACCT_ID, 
			T_IW_CUST_ACCT.CUST_ACCT_NAM, 
			#PREP.INA_LOC_ID, 
--			#LOC_NAME.LOC_NAME, 
			CASE
			WHEN T_IW_CUST_ACCT.CUST_BUS_TYP_CD IN ('01','02','05') AND T_IW_CUST_ACCT.NATL_GRP_CD <> '0401' THEN 'ISMC'
			WHEN T_IW_CUST_ACCT.CUST_BUS_TYP_CD IN ('01','02','05') AND T_IW_CUST_ACCT.NATL_GRP_CD = '0401' THEN 'MASTERS'
			WHEN T_IW_CUST_ACCT.CUST_BUS_TYP_CD IN ('07','08','09','16','25','27','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48') THEN 'MHS'
			WHEN T_IW_CUST_ACCT.CUST_BUS_TYP_CD IN ('03','04','06','10','11','12','14','17','21','22','23','24','26','28','29') THEN 'RNA'
			ELSE 'OTHER'
			END AS CUST_SEGMENT,
--			#PREP.[BUYING GROUP] 'BUYING_GROUP', 
--			#PREP.[DIGITAL PHARMACY] DIGITAL_PHARMACY, 
			#PREP.REP_NAME,
			#PREP.REP_TITLE,
			#PREP.DSM_NAME,
			#PREP.VPS_NAME,
			#PREP.AVP_NAME,
			#PREP.COMP_FLG,
			#PREP.COMMON_ENTITY_ID, 
			#PREP.COMMON_ENTITY_DESC AS COMMON_ENTITY_NAME, 
			#PREP.COMMON_GROUP_ID, 
			#PREP.COMMON_GROUP_DESC AS COMMON_GROUP_NAME, 
		--	#PREP.DEAL_TYPE, 
			CASE
			WHEN T_IW_CUST_ACCT.ACCT_DLVRY_ST_ABRV IN ('ND','SD','NE','MN','IA',',MO','AR','WI','IL','MS','AL','TN','KY','WV','OH','MI','IN','MO') THEN 'CENTRAL'
			WHEN T_IW_CUST_ACCT.ACCT_DLVRY_ST_ABRV IN ('ME','VT','NH','MA','RI','CT','NY','NJ','PA','DE','MD','VA','NC','SC','GA','FL','DC') THEN 'EAST'
			WHEN T_IW_CUST_ACCT.ACCT_DLVRY_ST_ABRV IN ('WA','OR','CA','ID','NV','UT','AZ','NM','TX','LA','OK','KS','MT','WY','CO','AK','HI') THEN 'WEST'
			ELSE 'N/A' END GEO_REGION,
			CASE WHEN #HM.INA_LOC_ID IS NOT NULL THEN 'Y' ELSE 'N' END HM_CUSTOMER, 
			CASE WHEN #HMA.INA_LOC_ID IS NOT NULL THEN 'Y' ELSE 'N' END AH_CUSTOMER, 
			T_IW_CUST_ACCT.HOME_DC_ID, 
			T_IW_CUST_ACCT.HOME_DC_DSCR,
			T_IW_CUST_ACCT.SLS_TERR_ID,
			#DART_INFO.RANKING 'DART_RNK', 
			GNRC_DLR_PRIM_IND, 
			DLR_PRIM_IND,
			T_IW_CUST_ACCT.CUST_BUS_TYP_CD,
			T_IW_CUST_BUS_TYP.CUST_BUS_TYP_DSCR,
			T_IW_CUST_ACCT.NATL_GRP_CD,
			T_IW_CUST_ACCT.NATL_SUB_GRP_CD,
			T_IW_CUST_ACCT.CUST_CHN_ID,
			T_IW_CUST_ACCT.CUST_RGN_NUM,
			T_IW_CUST_ACCT.CUST_DSTRCT_NUM,
			MCK_ISMC_ST_MKT_SHARE,
			ISNULL(#GEO.GOOGLE_LATITUDE, #GEO_ALT.LAT) LAT, 
			ISNULL(#GEO.GOOGLE_LONGITUDE, #GEO_ALT.LONG) LONG,
			T_IW_CUST_ACCT.ACCT_DLVRY_ADDR ADDR,
			T_IW_CUST_ACCT.ACCT_DLVRY_CTY_NAM CITY,
			T_IW_CUST_ACCT.ACCT_DLVRY_ST_ABRV STATE,
			T_IW_CUST_ACCT.ACCT_DLVRY_ZIP ZIP,
			#PREP.YR_MONTH,
			#LOC_ATR.AVG_SLS_LOC, 
			#LOC_ATR.AVG_SLS_NATL_GRP,
			#LOC_ATR.AVG_GP_LOC,
			#LOC_ATR.LOC_GCR,
			#LOC_ATR.LOC_MONTHS_ACTIVE,
			#TIER.CUST_AVG_TIER LOC_AVG_TIER,
			#COUNTY.COUNTY,
		    #KEY_ACCTS.KEY_ACCTS,
			--#PREP.RX_SLS, 
			#PREP.OS_GROSS_SLS, #PREP.MS_NWN_GROSS_SLS, #PREP.VENDOR_CONTRACT_GROSS_SLS, #PREP.OTHER_GROSS_SLS,
			#PREP.GROSS_SLS NET_SLS, #PREP.BX_GROSS_SLS, #PREP.SX_GROSS_SLS, #PREP.GX_GROSS_SLS, #PREP.OTC_GROSS_SLS, #PREP.MPB_GROSS_SLS, #PREP.BIO_GROSS_SLS,
			#PREP.NET_REVENUE NET_REV, 
			#PREP.GROSS_PROFIT, #PREP.BX_GP, #PREP.SX_GP, #PREP.GX_GP, #PREP.OTC_GP, #PREP.MPB_GP, #PREP.BIO_GP, #PREP.OS_GP,
			#PREP.EBIT, #PREP.BX_EBIT, #PREP.SX_EBIT, #PREP.GX_EBIT, #PREP.OTC_EBIT, #PREP.MPB_EBIT, #PREP.BIO_EBIT, #PREP.OS_EBIT,
			#PREP.SLS_QTY
INTO 		GX_RPT.DBO.T_CP_SALES_FORCE_ALIGN
FROM 		#PREP
LEFT JOIN 	#DART_INFO
ON 			#PREP.CUST_ACCT_ID = #DART_INFO.ACCOUNT
LEFT JOIN 	#GEO
ON 			#PREP.CUST_ACCT_ID = #GEO.CUST_ACCT_ID
LEFT JOIN   #MKT_SHR
ON 			#GEO.ORIG_STATE = #MKT_SHR.STATE
LEFT JOIN 	#PRI_FLG
ON 			#PREP.CUST_ACCT_ID = #PRI_FLG.CUST_ACCT_ID
LEFT JOIN 	REFERENCE.DBO.T_IW_CUST_ACCT
ON 			#PREP.CUST_ACCT_ID = T_IW_CUST_ACCT.CUST_ACCT_ID
LEFT JOIN 	REFERENCE.DBO.T_IW_CUST_BUS_TYP 
ON 			T_IW_CUST_ACCT.CUST_BUS_TYP_CD = T_IW_CUST_BUS_TYP.CUST_BUS_TYP_CD
--LEFT JOIN   #MKT_SHR
--ON 			T_IW_CUST_ACCT.ACCT_DLVRY_ST_ABRV = #MKT_SHR.STATE
--LEFT JOIN   #LOC_NAME
--ON 			#PREP.INA_LOC_ID = #LOC_NAME.INA_LOC_ID
LEFT JOIN 	#LOC_ATR
ON 			#PREP.INA_LOC_ID = #LOC_ATR.INA_LOC_ID
LEFT JOIN 	#TIER
ON 			#PREP.INA_LOC_ID = #TIER.INA_LOC_ID
LEFT JOIN 	#COUNTY
ON 			#GEO.ORIG_ZIP = #COUNTY.ZIP
LEFT JOIN 	#KEY_ACCTS
ON 			#PREP.INA_LOC_ID = #KEY_ACCTS.INA_LOC_ID
LEFT JOIN 	#GEO_ALT
ON 			#GEO_ALT.NCPDP = T_IW_CUST_ACCT.NABP_NUM
LEFT JOIN 	#HM
ON 			#PREP.INA_LOC_ID = #HM.INA_LOC_ID
LEFT JOIN 	#HMA
ON 			#PREP.INA_LOC_ID = #HMA.INA_LOC_ID

