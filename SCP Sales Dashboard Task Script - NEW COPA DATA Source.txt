USE ROLE SBX_EA_GENERAL_FR;
USE SECONDARY ROLES ALL;

--CUSTOMER LIST
CREATE OR REPLACE TABLE CUST AS 
SELECT ACCT.CUST_ACCT_ID,
       ACCT.CUST_ACCT_NAM,
       ACCT.CUST_BUS_TYP_CD,
       ACCT.CUST_BUS_TYP_DSCR,
       ACCT.CUST_CHN_ID,
       ACCT.CUST_CHN_NAME,
       ACCT.NATL_GRP_CD,
       ACCT.NATL_GRP_NAM,
       ACCT.NATL_SUB_GRP_CD,
       ACCT.NATL_SUB_GRP_NAM,
       ACCT.SLS_TERR_ID,
       ACCT.HOME_DC_ID,
       ACCT.HOME_DC_DSCR,
       ACCT.CUST_RGN_NUM,
       ACCT.CUST_DSTRCT_NUM,
       ACCT.ACTIVE_CUST_IND,
       ACCT.COMMON_ENTITY_ID,
       ACCT.COMMON_ENTITY_NAME,
       ACCT.COMMON_GRP_ID AS COMMON_GROUP_ID,
       ACCT.COMMON_GRP_NAME AS COMMON_GROUP_NAME, 
       ACCT.ACCT_CLAS_CD,
       ACCT.ACCT_CLAS_DSCR,
       ACCT.MRKT_SEG_CD,
       ACCT.MRKT_SEG_NAM,
       ACCT.DIST_CHNL_TYP_CD,
       ACCT.DIST_CHNL_TYP_DSCR,
       ACCT.SAP_BUS_TYPE_CD,
       ACCT.SAP_BUS_TYPE_DSCR,
       ACCT.BYNG_GRP_ID,
       ACCT.BYNG_GRP_NAME,
       ACCT.DEA_BUS_CD,
       ACCT.DEA_BUS_CD_DSCR,
       ACCT_SLS_TYPE_DSCR,
       ACCT.IQVIA_SLS1YR_PHARMA_RX_PRI_SUPLR_FLG,
       ACCT.IQVIA_SLS1YR_PHARMA_RX_PRI_SUPLR_PCT_RANGE_DSCR,
       ACCT.AMDM_ERA_OWNR_TYPE_DSCR,
       ACCT.MCK_MRKT_SEG_DSCR,
       MAP.INA_LOC_ID,
       ADDR.ORIG_ADDR AS ADDR, 
       ADDR.ORIG_CITY AS CITY, 
       ADDR.ORIG_STATE AS STATE, 
       ADDR.ORIG_ZIP AS ZIP, 
       ADDR.GOOGLE_LATITUDE AS LAT, 
       ADDR.GOOGLE_LONGITUDE AS LONG,
       ZIP."county" AS COUNTY,
       CASE
			WHEN ACCT.CUST_BUS_TYP_CD IN ('01','02','05') AND ACCT.NATL_GRP_CD <> '0401' THEN 'ISMC'
			WHEN ACCT.CUST_BUS_TYP_CD IN ('01','02','05') AND ACCT.NATL_GRP_CD = '0401' THEN 'MASTERS'
			WHEN ACCT.CUST_BUS_TYP_CD IN ('07','08','09','16','25','27','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48') THEN 'MHS'
			WHEN ACCT.CUST_BUS_TYP_CD IN ('03','04','06','10','11','12','14','17','21','22','23','24','26','28','29') THEN 'RNA'
			ELSE 'OTHER'
			END AS CUST_SEGMENT,
       CASE
			WHEN ADDR.ORIG_STATE IN ('ND','SD','NE','MN','IA',',MO','AR','WI','IL','MS','AL','TN','KY','WV','OH','MI','IN','MO') THEN 'CENTRAL'
			WHEN ADDR.ORIG_STATE IN ('ME','VT','NH','MA','RI','CT','NY','NJ','PA','DE','MD','VA','NC','SC','GA','FL','DC') THEN 'EAST'
			WHEN ADDR.ORIG_STATE IN ('WA','OR','CA','ID','NV','UT','AZ','NM','TX','LA','OK','KS','MT','WY','CO','AK','HI') THEN 'WEST'
			ELSE 'N/A' END GEO_REGION,
       HIER.REP_NUMBER,
       HIER.REP_NAME,
       HIER.REP_TITLE,
       HIER.VPS_NUMBER,
       HIER.VPS_NAME,
       HIER.VP_PRO_NUMBER,
       HIER.VP_PRO_NAME,
       HIER.AVP_NUMBER,
       HIER.AVP_NAME,
       HIER.DSM_NAME,
       HIER.COMP_FLG
FROM PRD_PSAS_DB.EDWRPT.DIM_CUST_ACCT_CURR ACCT
LEFT JOIN PRD_PSAS_DB.RPT.T_LOCATION_MAP MAP
ON LTRIM(ACCT.CUST_ACCT_ID,'0')=LTRIM(MAP.CUST_ACCT_ID,'0')
LEFT JOIN SBX_PSAS_DB.SALES_OPS_GOV.V_SFDC_CPH_HIERARCHY_CURR HIER
ON LTRIM(ACCT.CUST_ACCT_ID,'0')=LTRIM(HIER.CUST_ACCT_ID,'0')
LEFT JOIN PRD_PSAS_DB.RPT.T_MD_GEO_POSTAL ADDR
ON LTRIM(ACCT.CUST_ACCT_ID,'0')=LTRIM(ADDR.CUST_ACCT_ID,'0')
AND ADDR.ACTIVE_CUST_IND = 'A'
LEFT JOIN SBX_PSAS_DB.ANALYTICS."t_zips" ZIP
ON ADDR.ORIG_ZIP=ZIP."zip"
WHERE ACCT.CUST_BUS_TYP_CD IN ('02','05','24'); --leigh's team

-- SELECT * FROM sbx_psas_db.sbx_ea_all.T_COPA_PRICING_DASHBOARD_ITM_LVL_2024 where cust_acct_id='662006'; --item level
-- SELECT TOP 100* FROM SBX_PSAS_DB.SALES_OPS_GOV.T_DATA_DEV_T_COPA_PRICING_DASHBOARD_ATTR; --copy
-- SELECT TOP 100* FROM PRD_EAA_SBX_DB.PRD_FINANCE_EMBEDDED.T_COPA_PRICING_DASHBOARD_ATTR; --real
-- SELECT * FROM SBX_PSAS_DB.SBX_EA_ALL.V_COPA_EA WHERE CUST_NUM='662006' AND POST_DT>'2024-03-01';
-- SELECT TOP 100* FROM PRD_PSAS_DB.RPT.DIM_ITEM_CURR;

-- SELECT EM_ITEM_NUM, COPA_DEPT_CD FROM PRD_PSAS_DB.RPT.DIM_ITEM_CURR WHERE EM_ITEM_NUM IN ('2834109','2835023','2847283')

-- CREATE OR REPLACE TABLE SBX_PSAS_DB.SALES_OPS_GOV.PERIOD_MAPPING (
-- POSTING_MTH DATE,	
-- FISCAL_YR VARCHAR(99),
-- FISCAL_YR_PERIOD VARCHAR(99),
-- CAL_YR_PERIOD VARCHAR(99)
-- );
--SELECT * FROM SBX_PSAS_DB.SALES_OPS_GOV.PERIOD_MAPPING;

CREATE OR REPLACE TABLE SLS_CTGY_MAPPING AS 
SELECT DISTINCT SLS_CTGRY_CD,
SLS_CTGRY_PRC_PROD_GRP, 
SLS_CTGRY_FPA_PRG_NAM
FROM SBX_PSAS_DB.SBX_EA_ALL.V_COPA_EA
WHERE POST_DT >= '2023-04-01' --FY24
GROUP BY 1,2,3;
--SELECT * FROM SLS_CTGY_MAPPING;

--SALES
-- CREATE OR REPLACE TEMPORARY TABLE SALES_PREP AS 
-- SELECT DISTINCT * FROM sbx_psas_db.sbx_ea_all.T_COPA_PRICING_DASHBOARD_ITM_LVL_2024
-- WHERE COMPANY_CD IN ('8000','8545','8079') --FULL-LINE WHOLESALE, MPB and Masters
-- AND   POSTING_MTH >= '2023-04-01'; --FY24
-- AND   FPA_CUST_SEG_CD IN ('A','B')  --CPH

-- select * from SBX_PSAS_DB.SALES_OPS_GOV.PERIOD_MAPPING

CREATE OR REPLACE TEMPORARY TABLE SALES AS SELECT DISTINCT
        MAPPING.FISCAL_YR,
        MAPPING.FISCAL_YR_PERIOD, 
        MAPPING.CAL_YR_PERIOD,
        ITM_LVL.POSTING_MTH,
        ITM_LVL.CUST_ACCT_ID,
        ITM_LVL.EM_ITEM_NUM AS ITEM_NUM,
        ITEM.SELL_DSCR AS ITEM_DSCR,
        ITM_LVL.SLS_CTGY_CD,
        SLS.SLS_CTGRY_PRC_PROD_GRP, 
        SLS.SLS_CTGRY_FPA_PRG_NAM, 
        ITM_LVL.COMPANY_CD AS COMPANY_CODE,
        CASE WHEN ITEM.COPA_DEPT_CD='V4' THEN 'Y'
        ELSE 'N' END AS COVID,
        SUM(SLS_QTY) AS SLS_QTY,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP IS NULL OR SLS_CTGRY_PRC_PROD_GRP = 'Bx' AND COMPANY_CD <> '8545' THEN SLS_QTY ELSE 0 END) AS BX_SLS_QTY,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Gx' AND COMPANY_CD <> '8545' THEN SLS_QTY ELSE 0 END) AS GX_SLS_QTY,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Sx' AND COMPANY_CD <> '8545' THEN SLS_QTY ELSE 0 END) AS SX_SLS_QTY,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Bio' AND COMPANY_CD <> '8545' THEN SLS_QTY ELSE 0 END) AS BIO_SLS_QTY,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Bx OTC' AND COMPANY_CD <> '8545' THEN SLS_QTY ELSE 0 END) AS OTC_SLS_QTY,
        SUM(CASE WHEN COMPANY_CD = '8545' THEN SLS_QTY ELSE 0 END) AS MPB_SLS_QTY,
        SUM(GROSS_SLS) AS NET_SLS,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP IS NULL OR SLS_CTGRY_PRC_PROD_GRP = 'Bx' AND COMPANY_CD <> '8545' THEN GROSS_SLS ELSE 0 END) AS BX_GROSS_SLS,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Gx' AND COMPANY_CD <> '8545' THEN GROSS_SLS ELSE 0 END) AS GX_GROSS_SLS,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Sx' AND COMPANY_CD <> '8545' THEN GROSS_SLS ELSE 0 END) AS SX_GROSS_SLS,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Bio' AND COMPANY_CD <> '8545' THEN GROSS_SLS ELSE 0 END) AS BIO_GROSS_SLS,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Bx OTC' AND COMPANY_CD <> '8545' THEN GROSS_SLS ELSE 0 END) AS OTC_GROSS_SLS,
        SUM(CASE WHEN COMPANY_CD = '8545' THEN GROSS_SLS ELSE 0 END) AS MPB_GROSS_SLS,
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = 'OneStop' THEN GROSS_SLS ELSE 0 END) AS OS_GROSS_SLS,
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = 'Multisource' OR SLS_CTGRY_FPA_PRG_NAM = 'Network Net' OR SLS_CTGRY_FPA_PRG_NAM = 'NextStop' THEN GROSS_SLS ELSE 0 END) AS MS_NWN_GROSS_SLS,
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = 'Vendor Contract' THEN GROSS_SLS ELSE 0 END) AS VENDOR_CONTRACT_GROSS_SLS,
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM IS NULL OR SLS_CTGRY_FPA_PRG_NAM = 'Bx' OR SLS_CTGRY_FPA_PRG_NAM = 'Bio' OR SLS_CTGRY_FPA_PRG_NAM = 'Sx' OR SLS_CTGRY_FPA_PRG_NAM = 'Nonsource' THEN GROSS_SLS ELSE 0 END) AS OTHER_GROSS_SLS,
        SUM(NET_REVENUE_12MO) AS NET_REV,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP IS NULL OR SLS_CTGRY_PRC_PROD_GRP = 'Bx' AND COMPANY_CD <> '8545' THEN NET_REVENUE_12MO ELSE 0 END) AS BX_NET_REVENUE,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Gx' AND COMPANY_CD <> '8545' THEN NET_REVENUE_12MO ELSE 0 END) AS GX_NET_REVENUE,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Sx' AND COMPANY_CD <> '8545' THEN NET_REVENUE_12MO ELSE 0 END) AS SX_NET_REVENUE,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Bio' AND COMPANY_CD <> '8545' THEN NET_REVENUE_12MO ELSE 0 END) AS BIO_NET_REVENUE,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Bx OTC' AND COMPANY_CD <> '8545' THEN NET_REVENUE_12MO ELSE 0 END) AS OTC_NET_REVENUE,
        SUM(CASE WHEN COMPANY_CD = '8545' THEN NET_REVENUE_12MO ELSE 0 END) AS MPB_NET_REVENUE,
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = 'OneStop' THEN NET_REVENUE_12MO ELSE 0 END) AS OS_NET_REVENUE,
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = 'Multisource' OR SLS_CTGRY_FPA_PRG_NAM = 'Network Net' OR SLS_CTGRY_FPA_PRG_NAM = 'NextStop' THEN NET_REVENUE_12MO ELSE 0 END) AS MS_NWN_NET_REVENUE,
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = 'Vendor Contract' THEN NET_REVENUE_12MO ELSE 0 END) AS VENDOR_CONTRACT_NET_REVENUE,
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM IS NULL OR SLS_CTGRY_FPA_PRG_NAM = 'Bx' OR SLS_CTGRY_FPA_PRG_NAM = 'Bio' OR SLS_CTGRY_FPA_PRG_NAM = 'Sx' OR SLS_CTGRY_FPA_PRG_NAM = 'Nonsource' THEN NET_REVENUE_12MO ELSE 0 END) AS OTHER_NET_REVENUE,
        SUM(VAR_EBIT) AS EBIT,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP IS NULL OR SLS_CTGRY_PRC_PROD_GRP = 'Bx' AND COMPANY_CD <> '8545' THEN VAR_EBIT ELSE 0 END) AS BX_EBIT,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Gx' AND COMPANY_CD <> '8545' THEN VAR_EBIT ELSE 0 END) AS GX_EBIT,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Sx' AND COMPANY_CD <> '8545' THEN VAR_EBIT ELSE 0 END) AS SX_EBIT,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Bio' AND COMPANY_CD <> '8545' THEN VAR_EBIT ELSE 0 END) AS BIO_EBIT,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Bx OTC' AND COMPANY_CD <> '8545' THEN VAR_EBIT ELSE 0 END) AS OTC_EBIT,
        SUM(CASE WHEN COMPANY_CD = '8545' THEN VAR_EBIT ELSE 0 END) AS MPB_EBIT,
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = 'OneStop' THEN VAR_EBIT ELSE 0 END) AS OS_EBIT,
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = 'Multisource' OR SLS_CTGRY_FPA_PRG_NAM = 'Network Net' OR SLS_CTGRY_FPA_PRG_NAM = 'NextStop' THEN VAR_EBIT ELSE 0 END) AS MS_NWN_EBIT,
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = 'Vendor Contract' THEN VAR_EBIT ELSE 0 END) AS VENDOR_CONTRACT_VAR_EBIT,
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM IS NULL OR SLS_CTGRY_FPA_PRG_NAM = 'Bx' OR SLS_CTGRY_FPA_PRG_NAM = 'Bio' OR SLS_CTGRY_FPA_PRG_NAM = 'Sx' OR SLS_CTGRY_FPA_PRG_NAM = 'Nonsource' THEN VAR_EBIT ELSE 0 END) AS OTHER_EBIT,
        SUM(GROSS_PROFIT_12MO) AS GROSS_PROFIT,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP IS NULL OR SLS_CTGRY_PRC_PROD_GRP = 'Bx' AND COMPANY_CD <> '8545' THEN GROSS_PROFIT_12MO ELSE 0 END) AS BX_GP,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Gx' AND COMPANY_CD <> '8545' THEN GROSS_PROFIT_12MO ELSE 0 END) AS GX_GP,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Sx' AND COMPANY_CD <> '8545' THEN GROSS_PROFIT_12MO ELSE 0 END) AS SX_GP,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Bio' AND COMPANY_CD <> '8545' THEN GROSS_PROFIT_12MO ELSE 0 END) AS BIO_GP,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP = 'Bx OTC' AND COMPANY_CD <> '8545' THEN GROSS_PROFIT_12MO ELSE 0 END) AS OTC_GP,
        SUM(CASE WHEN COMPANY_CD = '8545' THEN GROSS_PROFIT_12MO ELSE 0 END) AS MPB_GP,
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = 'OneStop' THEN GROSS_PROFIT_12MO ELSE 0 END) AS OS_GP,
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = 'Multisource' OR SLS_CTGRY_FPA_PRG_NAM = 'Network Net' OR SLS_CTGRY_FPA_PRG_NAM = 'NextStop' THEN GROSS_PROFIT_12MO ELSE 0 END) AS MS_NWN_GP,
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM = 'Vendor Contract' THEN GROSS_PROFIT_12MO ELSE 0 END) AS VENDOR_CONTRACT_GP,
        SUM(CASE WHEN SLS_CTGRY_FPA_PRG_NAM IS NULL OR SLS_CTGRY_FPA_PRG_NAM = 'Bx' OR SLS_CTGRY_FPA_PRG_NAM = 'Bio' OR SLS_CTGRY_FPA_PRG_NAM = 'Sx' OR SLS_CTGRY_FPA_PRG_NAM = 'Nonsource' THEN GROSS_PROFIT_12MO ELSE 0 END) AS OTHER_GP
        
FROM sbx_psas_db.sbx_ea_all.T_COPA_PRICING_DASHBOARD_ITM_LVL_2024 ITM_LVL
LEFT JOIN    (SELECT * FROM PRD_PSAS_DB.RPT.DIM_ITEM_CURR WHERE EM_ITEM_NUM NOT IN ('')) ITEM
ON      LTRIM(ITM_LVL.EM_ITEM_NUM,'0') = LTRIM(ITEM.EM_ITEM_NUM,'0')
LEFT JOIN    SBX_PSAS_DB.SALES_OPS_GOV.PERIOD_MAPPING MAPPING
ON      MAPPING.POSTING_MTH=ITM_LVL.POSTING_MTH
LEFT JOIN    SLS_CTGY_MAPPING SLS
ON      SLS.SLS_CTGRY_CD=ITM_LVL.SLS_CTGY_CD
WHERE   --SRC_FLG NOT IN ('MRP','ARC')
        ITM_LVL.COMPANY_CD IN ('8000','8545','8079') --FULL-LINE WHOLESALE, MPB and Masters
AND     ITM_LVL.FPA_CUST_SEG_CD IN ('A','B') --CPH
AND     ITM_LVL.POSTING_MTH >= '2023-04-01' --FY24
-- AND  CUST_ACCT_ID='878015' AND ITM_LVL.POSTING_MTH='2024-12-01'
--AND 	POST_DT BETWEEN DATE_TRUNC('month', ADD_MONTHS(CURRENT_DATE(),-6)) AND LAST_DAY(ADD_MONTHS(CURRENT_DATE(),-1))
GROUP BY MAPPING.FISCAL_YR,
         MAPPING.FISCAL_YR_PERIOD,
         MAPPING.CAL_YR_PERIOD,
         ITM_LVL.POSTING_MTH,
         ITM_LVL.CUST_ACCT_ID,
         ITM_LVL.EM_ITEM_NUM,
         ITEM.SELL_DSCR,
         ITM_LVL.SLS_CTGY_CD,
         SLS.SLS_CTGRY_PRC_PROD_GRP,
         SLS.SLS_CTGRY_FPA_PRG_NAM,
         ITM_LVL.COMPANY_CD,
         CASE WHEN ITEM.COPA_DEPT_CD='V4' THEN 'Y'
         ELSE 'N' END;
-- HAVING SUM(SLS_QTY) > 0 AND SUM(SLS_QTY) IS NOT NULL
--SELECT * FROM SALES;

--FINAL TABLE
CREATE OR REPLACE TABLE FINAL AS
SELECT DISTINCT CUST.*, 
       SALES.FISCAL_YR,
       SALES.FISCAL_YR_PERIOD,
       SALES.CAL_YR_PERIOD AS YR_MONTH,
       SALES.ITEM_NUM,
       SALES.ITEM_DSCR,
       SALES.SLS_CTGRY_PRC_PROD_GRP,
       SALES.SLS_CTGRY_FPA_PRG_NAM, 
       SALES.COMPANY_CODE,
       SALES.COVID,
       SALES.OS_GROSS_SLS, SALES.MS_NWN_GROSS_SLS, SALES.VENDOR_CONTRACT_GROSS_SLS, SALES.OTHER_GROSS_SLS, SALES.NET_SLS, 
       SALES.BX_GROSS_SLS, SALES.SX_GROSS_SLS, SALES.GX_GROSS_SLS, SALES.OTC_GROSS_SLS, SALES.MPB_GROSS_SLS,
       SALES.BIO_GROSS_SLS, 
       SALES.NET_REV, SALES.BX_NET_REVENUE, SALES.GX_NET_REVENUE, SALES.SX_NET_REVENUE, SALES.BIO_NET_REVENUE, 
       SALES.OTC_NET_REVENUE, SALES.MPB_NET_REVENUE, SALES.OS_NET_REVENUE, SALES.MS_NWN_NET_REVENUE, 
       SALES.VENDOR_CONTRACT_NET_REVENUE, SALES.OTHER_NET_REVENUE,
	   SALES.GROSS_PROFIT, SALES.BX_GP, SALES.SX_GP, SALES.GX_GP, SALES.OTC_GP, SALES.MPB_GP, SALES.BIO_GP, SALES.OS_GP,
	   SALES.EBIT, SALES.BX_EBIT, SALES.SX_EBIT, SALES.GX_EBIT, SALES.OTC_EBIT, SALES.MPB_EBIT, SALES.BIO_EBIT, 
       SALES.OS_EBIT, SALES.SLS_QTY
FROM CUST CUST
LEFT JOIN SALES SALES
ON LTRIM(CUST.CUST_ACCT_ID,'0')=LTRIM(SALES.CUST_ACCT_ID,'0');

-- CREATE OR REPLACE TABLE SBX_PSAS_DB.ANALYTICS.SCP_OPTIMIZATION_REPORT AS
-- SELECT * FROM FINAL;

CREATE OR REPLACE TABLE SBX_PSAS_DB.ANALYTICS.SCP_OPTIMIZATION_REPORT_NEW AS
SELECT * FROM FINAL;

-- SELECT * FROM SBX_PSAS_DB.ANALYTICS.SCP_OPTIMIZATION_REPORT WHERE CUST_ACCT_ID='185855' AND FISCAL_YR_PERIOD='2024-12';

-- SELECT CUST_ACCT_ID,FISCAL_YR_PERIOD,SUM(GROSS_PROFIT) AS "GROSS_PROFIT" FROM SBX_PSAS_DB.ANALYTICS.SCP_OPTIMIZATION_REPORT_NEW GROUP BY 1,2;
--SELECT TOP 5* FROM SBX_PSAS_DB.ANALYTICS.SCP_OPTIMIZATION_REPORT WHERE COVID='Y';

-- SELECT * FROM sbx_psas_db.sbx_ea_all.T_COPA_PRICING_DASHBOARD_ITM_LVL_2024 WHERE CUST_ACCT_ID='859411' AND POSTING_MTH='2024-06-01'
-- SELECT TOP 10* FROM PRD_EAA_SBX_DB.PRD_FINANCE_EMBEDDED.T_COPA_PRICING_DASHBOARD_ATTR WHERE CUST_ACCT_ID='859411' AND POSTING_MTH='2024-06-01'
-- SELECT * FROM PRD_PSAS_DB.RPT.DIM_ITEM_CURR WHERE EM_ITEM_NUM IN ('')